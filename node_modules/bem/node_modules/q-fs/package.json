{
  "name": "q-fs",
  "version": "0.1.28",
  "description": "Q Promise wrappers for Node's file system.",
  "homepage": "http://github.com/kriskowal/q-fs/",
  "author": {
    "name": "Kris Kowal",
    "email": "kris@cixar.com",
    "url": "http://github.com/kriskowal/"
  },
  "bugs": {
    "mail": "kris@cixar.com",
    "url": "http://github.com/kriskowal/q-fs/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/kriskowal/q-fs/raw/master/LICENSE"
    }
  ],
  "main": "q-fs.js",
  "dependencies": {
    "q": "0.8.4",
    "q-io": "0.0.13",
    "fs-boot": "0.0.8"
  },
  "devDependencies": {
    "test": "0.1.1"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/kriskowal/q-fs.git"
  },
  "scripts": {
    "test": "node test/all.js"
  },
  "readme": "\n[![Build Status](https://secure.travis-ci.org/kriskowal/q-fs.png)](http://travis-ci.org/kriskowal/q-fs)\n\nFile system API for Q when/defer-style promises\n\nOpen options:\n\n-   ``flags``: ``r``, ``w``, ``a``, ``b``\n-   ``charset``: default of ``utf-8``\n-   ``bufferSize``: in bytes\n-   ``mode``: UNIX permissions\n-   ``begin`` first byte to read (defaults to zero)\n-   ``end`` one past the last byte to read.  ``end - begin == length``\n\nFunctions:\n\n-   ``open(path, options)``\n-   ``read(path, options)``\n-   ``write(path, content, options)``\n-   ``append(path, content, options)`` NOT TESTED\n-   ``copy(source, target)`` NOT IMPLEMENTED\n-   ``list(path)``\n-   ``listTree(path, guard_opt(path, stat)``)\n-   ``listDirectoryTree(path)``\n-   ``glob(pattern)`` NOT IMPLEMENTED\n-   ``match(pattern, file)`` NOT IMPLEMENTED\n-   ``makeDirectory(path)``\n-   ``makeTree(path)`` NOT TESTED\n-   ``remove(path)`` NOT TESTED\n-   ``removeTree(path)`` NOT TESTED\n-   ``link(source, taget)`` NOT TESTED (probably safe)\n-   ``chown(path, uid, gid)`` NOT TESTED (probably safe)\n-   ``chmod(path, mode)`` NOT TESTED (probably safe)\n-   ``stat(path)``\n-   ``statLink(path)`` NOT TESTED\n-   ``statFd(fd)`` NOT TESTED\n-   ``exists(path)``\n-   ``isFile(path)``\n-   ``isDirectory(path)``\n-   ``lastModified(path)``\n-   ``split(path)``\n-   ``join(paths)``\n-   ``join(...paths)``\n-   ``resolve(...paths)``\n-   ``normal(...paths)``\n-   ``absolute(path)``\n-   ``canonical(path)``\n-   ``readLink(path)``\n-   ``contains(parent, child)``\n-   ``relative(source, target)``\n-   ``relativeFromFile(source, target)``\n-   ``relativeFromDirectory(source, target)``\n-   ``isAbsolute(path)``\n-   ``isRelative(path)``\n-   ``isRoot(path)``\n-   ``root(path)``\n-   ``directory(path)``\n-   ``base(path, extension)``\n-   ``extension(path)``\n-   ``reroot(path_opt)``\n-   ``toObject(path_opt)``\n\nCopyright 2009, 2010 Kristopher Michael Kowal\nMIT License (enclosed)\n\n",
  "_id": "q-fs@0.1.28",
  "_from": "q-fs@0.1"
}
